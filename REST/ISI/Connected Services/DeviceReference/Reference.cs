//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DeviceReference
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Device", Namespace="http://homeautomation.org/")]
    public partial class Device : object
    {
        
        private int IdField;
        
        private string NameField;
        
        private System.Nullable<bool> StateField;
        
        private System.Nullable<double> ValueField;
        
        private int HouseIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<bool> State
        {
            get
            {
                return this.StateField;
            }
            set
            {
                this.StateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<double> Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int HouseId
        {
            get
            {
                return this.HouseIdField;
            }
            set
            {
                this.HouseIdField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://homeautomation.org/", ConfigurationName="DeviceReference.DeviceWSSoap")]
    public interface DeviceWSSoap
    {
        
        // CODEGEN: Generating message contract since element name GetAllDevicesResult from namespace http://homeautomation.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://homeautomation.org/GetAllDevices", ReplyAction="*")]
        DeviceReference.GetAllDevicesResponse GetAllDevices(DeviceReference.GetAllDevicesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://homeautomation.org/GetAllDevices", ReplyAction="*")]
        System.Threading.Tasks.Task<DeviceReference.GetAllDevicesResponse> GetAllDevicesAsync(DeviceReference.GetAllDevicesRequest request);
        
        // CODEGEN: Generating message contract since element name GetDeviceByUserIdResult from namespace http://homeautomation.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://homeautomation.org/GetDeviceByUserId", ReplyAction="*")]
        DeviceReference.GetDeviceByUserIdResponse GetDeviceByUserId(DeviceReference.GetDeviceByUserIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://homeautomation.org/GetDeviceByUserId", ReplyAction="*")]
        System.Threading.Tasks.Task<DeviceReference.GetDeviceByUserIdResponse> GetDeviceByUserIdAsync(DeviceReference.GetDeviceByUserIdRequest request);
        
        // CODEGEN: Generating message contract since element name name from namespace http://homeautomation.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://homeautomation.org/InsertDevice", ReplyAction="*")]
        DeviceReference.InsertDeviceResponse InsertDevice(DeviceReference.InsertDeviceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://homeautomation.org/InsertDevice", ReplyAction="*")]
        System.Threading.Tasks.Task<DeviceReference.InsertDeviceResponse> InsertDeviceAsync(DeviceReference.InsertDeviceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://homeautomation.org/UpdateDevice", ReplyAction="*")]
        int UpdateDevice(int id, double value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://homeautomation.org/UpdateDevice", ReplyAction="*")]
        System.Threading.Tasks.Task<int> UpdateDeviceAsync(int id, double value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://homeautomation.org/DeleteDevice", ReplyAction="*")]
        int DeleteDevice(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://homeautomation.org/DeleteDevice", ReplyAction="*")]
        System.Threading.Tasks.Task<int> DeleteDeviceAsync(int id);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAllDevicesRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAllDevices", Namespace="http://homeautomation.org/", Order=0)]
        public DeviceReference.GetAllDevicesRequestBody Body;
        
        public GetAllDevicesRequest()
        {
        }
        
        public GetAllDevicesRequest(DeviceReference.GetAllDevicesRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class GetAllDevicesRequestBody
    {
        
        public GetAllDevicesRequestBody()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAllDevicesResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAllDevicesResponse", Namespace="http://homeautomation.org/", Order=0)]
        public DeviceReference.GetAllDevicesResponseBody Body;
        
        public GetAllDevicesResponse()
        {
        }
        
        public GetAllDevicesResponse(DeviceReference.GetAllDevicesResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://homeautomation.org/")]
    public partial class GetAllDevicesResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public DeviceReference.Device[] GetAllDevicesResult;
        
        public GetAllDevicesResponseBody()
        {
        }
        
        public GetAllDevicesResponseBody(DeviceReference.Device[] GetAllDevicesResult)
        {
            this.GetAllDevicesResult = GetAllDevicesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDeviceByUserIdRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDeviceByUserId", Namespace="http://homeautomation.org/", Order=0)]
        public DeviceReference.GetDeviceByUserIdRequestBody Body;
        
        public GetDeviceByUserIdRequest()
        {
        }
        
        public GetDeviceByUserIdRequest(DeviceReference.GetDeviceByUserIdRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://homeautomation.org/")]
    public partial class GetDeviceByUserIdRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int userId;
        
        public GetDeviceByUserIdRequestBody()
        {
        }
        
        public GetDeviceByUserIdRequestBody(int userId)
        {
            this.userId = userId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDeviceByUserIdResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDeviceByUserIdResponse", Namespace="http://homeautomation.org/", Order=0)]
        public DeviceReference.GetDeviceByUserIdResponseBody Body;
        
        public GetDeviceByUserIdResponse()
        {
        }
        
        public GetDeviceByUserIdResponse(DeviceReference.GetDeviceByUserIdResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://homeautomation.org/")]
    public partial class GetDeviceByUserIdResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public DeviceReference.Device[] GetDeviceByUserIdResult;
        
        public GetDeviceByUserIdResponseBody()
        {
        }
        
        public GetDeviceByUserIdResponseBody(DeviceReference.Device[] GetDeviceByUserIdResult)
        {
            this.GetDeviceByUserIdResult = GetDeviceByUserIdResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertDeviceRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertDevice", Namespace="http://homeautomation.org/", Order=0)]
        public DeviceReference.InsertDeviceRequestBody Body;
        
        public InsertDeviceRequest()
        {
        }
        
        public InsertDeviceRequest(DeviceReference.InsertDeviceRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://homeautomation.org/")]
    public partial class InsertDeviceRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string name;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<bool> state;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Nullable<double> value;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int houseId;
        
        public InsertDeviceRequestBody()
        {
        }
        
        public InsertDeviceRequestBody(string name, System.Nullable<bool> state, System.Nullable<double> value, int houseId)
        {
            this.name = name;
            this.state = state;
            this.value = value;
            this.houseId = houseId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertDeviceResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertDeviceResponse", Namespace="http://homeautomation.org/", Order=0)]
        public DeviceReference.InsertDeviceResponseBody Body;
        
        public InsertDeviceResponse()
        {
        }
        
        public InsertDeviceResponse(DeviceReference.InsertDeviceResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://homeautomation.org/")]
    public partial class InsertDeviceResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int InsertDeviceResult;
        
        public InsertDeviceResponseBody()
        {
        }
        
        public InsertDeviceResponseBody(int InsertDeviceResult)
        {
            this.InsertDeviceResult = InsertDeviceResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface DeviceWSSoapChannel : DeviceReference.DeviceWSSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class DeviceWSSoapClient : System.ServiceModel.ClientBase<DeviceReference.DeviceWSSoap>, DeviceReference.DeviceWSSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public DeviceWSSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(DeviceWSSoapClient.GetBindingForEndpoint(endpointConfiguration), DeviceWSSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DeviceWSSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(DeviceWSSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DeviceWSSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(DeviceWSSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DeviceWSSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DeviceReference.GetAllDevicesResponse DeviceReference.DeviceWSSoap.GetAllDevices(DeviceReference.GetAllDevicesRequest request)
        {
            return base.Channel.GetAllDevices(request);
        }
        
        public DeviceReference.Device[] GetAllDevices()
        {
            DeviceReference.GetAllDevicesRequest inValue = new DeviceReference.GetAllDevicesRequest();
            inValue.Body = new DeviceReference.GetAllDevicesRequestBody();
            DeviceReference.GetAllDevicesResponse retVal = ((DeviceReference.DeviceWSSoap)(this)).GetAllDevices(inValue);
            return retVal.Body.GetAllDevicesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<DeviceReference.GetAllDevicesResponse> DeviceReference.DeviceWSSoap.GetAllDevicesAsync(DeviceReference.GetAllDevicesRequest request)
        {
            return base.Channel.GetAllDevicesAsync(request);
        }
        
        public System.Threading.Tasks.Task<DeviceReference.GetAllDevicesResponse> GetAllDevicesAsync()
        {
            DeviceReference.GetAllDevicesRequest inValue = new DeviceReference.GetAllDevicesRequest();
            inValue.Body = new DeviceReference.GetAllDevicesRequestBody();
            return ((DeviceReference.DeviceWSSoap)(this)).GetAllDevicesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DeviceReference.GetDeviceByUserIdResponse DeviceReference.DeviceWSSoap.GetDeviceByUserId(DeviceReference.GetDeviceByUserIdRequest request)
        {
            return base.Channel.GetDeviceByUserId(request);
        }
        
        public DeviceReference.Device[] GetDeviceByUserId(int userId)
        {
            DeviceReference.GetDeviceByUserIdRequest inValue = new DeviceReference.GetDeviceByUserIdRequest();
            inValue.Body = new DeviceReference.GetDeviceByUserIdRequestBody();
            inValue.Body.userId = userId;
            DeviceReference.GetDeviceByUserIdResponse retVal = ((DeviceReference.DeviceWSSoap)(this)).GetDeviceByUserId(inValue);
            return retVal.Body.GetDeviceByUserIdResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<DeviceReference.GetDeviceByUserIdResponse> DeviceReference.DeviceWSSoap.GetDeviceByUserIdAsync(DeviceReference.GetDeviceByUserIdRequest request)
        {
            return base.Channel.GetDeviceByUserIdAsync(request);
        }
        
        public System.Threading.Tasks.Task<DeviceReference.GetDeviceByUserIdResponse> GetDeviceByUserIdAsync(int userId)
        {
            DeviceReference.GetDeviceByUserIdRequest inValue = new DeviceReference.GetDeviceByUserIdRequest();
            inValue.Body = new DeviceReference.GetDeviceByUserIdRequestBody();
            inValue.Body.userId = userId;
            return ((DeviceReference.DeviceWSSoap)(this)).GetDeviceByUserIdAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DeviceReference.InsertDeviceResponse DeviceReference.DeviceWSSoap.InsertDevice(DeviceReference.InsertDeviceRequest request)
        {
            return base.Channel.InsertDevice(request);
        }
        
        public int InsertDevice(string name, System.Nullable<bool> state, System.Nullable<double> value, int houseId)
        {
            DeviceReference.InsertDeviceRequest inValue = new DeviceReference.InsertDeviceRequest();
            inValue.Body = new DeviceReference.InsertDeviceRequestBody();
            inValue.Body.name = name;
            inValue.Body.state = state;
            inValue.Body.value = value;
            inValue.Body.houseId = houseId;
            DeviceReference.InsertDeviceResponse retVal = ((DeviceReference.DeviceWSSoap)(this)).InsertDevice(inValue);
            return retVal.Body.InsertDeviceResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<DeviceReference.InsertDeviceResponse> DeviceReference.DeviceWSSoap.InsertDeviceAsync(DeviceReference.InsertDeviceRequest request)
        {
            return base.Channel.InsertDeviceAsync(request);
        }
        
        public System.Threading.Tasks.Task<DeviceReference.InsertDeviceResponse> InsertDeviceAsync(string name, System.Nullable<bool> state, System.Nullable<double> value, int houseId)
        {
            DeviceReference.InsertDeviceRequest inValue = new DeviceReference.InsertDeviceRequest();
            inValue.Body = new DeviceReference.InsertDeviceRequestBody();
            inValue.Body.name = name;
            inValue.Body.state = state;
            inValue.Body.value = value;
            inValue.Body.houseId = houseId;
            return ((DeviceReference.DeviceWSSoap)(this)).InsertDeviceAsync(inValue);
        }
        
        public int UpdateDevice(int id, double value)
        {
            return base.Channel.UpdateDevice(id, value);
        }
        
        public System.Threading.Tasks.Task<int> UpdateDeviceAsync(int id, double value)
        {
            return base.Channel.UpdateDeviceAsync(id, value);
        }
        
        public int DeleteDevice(int id)
        {
            return base.Channel.DeleteDevice(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteDeviceAsync(int id)
        {
            return base.Channel.DeleteDeviceAsync(id);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.DeviceWSSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.DeviceWSSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.DeviceWSSoap))
            {
                return new System.ServiceModel.EndpointAddress("https://isisoap.azurewebsites.net/Services/DeviceWS.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.DeviceWSSoap12))
            {
                return new System.ServiceModel.EndpointAddress("https://isisoap.azurewebsites.net/Services/DeviceWS.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            DeviceWSSoap,
            
            DeviceWSSoap12,
        }
    }
}
