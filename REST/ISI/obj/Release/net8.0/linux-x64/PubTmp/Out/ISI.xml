<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ISI</name>
    </assembly>
    <members>
        <member name="T:ISI.Controllers.DevicesController">
            <summary>
            Controller for managing devices.
            </summary>
        </member>
        <member name="M:ISI.Controllers.DevicesController.GetAllDevices">
            <summary>
            Gets all devices.
            </summary>
            <returns>An ActionResult containing a list of all devices.</returns>
            <remarks>
            Sample Request:
                GET /api/Devices
                {
                    // No request body for this endpoint.
                }
            </remarks>
            <response code="200">Returns an ActionResult containing a list of all devices.</response>
            <response code="400">If the list is null</response>
            <response code="401">Unauthorized access to execute the method.</response>
        </member>
        <member name="M:ISI.Controllers.DevicesController.GetDeviceById(System.Int32)">
            <summary>
            Gets all device by the given userId.
            </summary>
            <param name="userId">The ID of the user to retrieve devices for.</param>
            <returns>An ActionResult containing the device information.</returns>
            <remarks>
            Sample Request:
                GET /api/Devices/{userId}
                {
                    "userId": 1
                }
            </remarks>
            <response code="200">Returns an ActionResult containing the device information.</response>
            <response code="400">If the device is null</response>
            <response code="401">Unauthorized access to execute the method.</response>
        </member>
        <member name="M:ISI.Controllers.DevicesController.PostDevice(ISI.Models.Device)">
            <summary>
            Inserts a new device.
            </summary>
            <param name="device">The device information to insert.</param>
            <returns>An IActionResult indicating the result of the insertion.</returns>
            <remarks>
            Sample Request:
                POST /api/Devices
                {
                    "id": 1,
                    "name": "Devicetest",
                    "state": false,
                    "value": 30.0,
                    "houseId": 1
                }
            </remarks>
            <response code="200">Returns an IActionResult indicating the result of the insertion.</response>
            <response code="400">If there was a parameter invalid</response>
            <response code="401">Unauthorized access to execute the method.</response>
        </member>
        <member name="M:ISI.Controllers.DevicesController.PostDeviceAsync(ISI.Models.Device)">
            <summary>
            Inserts a new device via Async.
            </summary>
            <param name="device">The device information to insert.</param>
            <returns>An IActionResult indicating the result of the insertion.</returns>
            <remarks>
            Sample Request:
                POST /api/Devices
                {
                    "id": 1,
                    "name": "Devicetest",
                    "state": false,
                    "value": 30.0,
                    "houseId": 1
                }
            </remarks>
            <response code="200">Returns an IActionResult indicating the result of the insertion.</response>
            <response code="400">If there was a parameter invalid</response>
            <response code="401">Unauthorized access to execute the method.</response>
        </member>
        <member name="M:ISI.Controllers.DevicesController.UpdateDevice(System.Int32,ISI.Models.Device)">
            <summary>
            Updates a device by its ID.
            </summary>
            <param name="id">The ID of the device to update.</param>
            <param name="device">The updated device information.</param>
            <returns>An IActionResult indicating the result of the update.</returns>
            <remarks>
            Sample Request:
                PUT /api/Devices/{id}
                {
                    "id": 1,
                    "name": "test",
                    "state": false,
                    "value": 25.0,
                    "houseId": 1
                }
            </remarks>
            <response code="200">Returns an IActionResult indicating the result of the update.</response>
            <response code="400">If the device is null</response>
            <response code="401">Unauthorized access to execute the method.</response>
        </member>
        <member name="M:ISI.Controllers.DevicesController.DeleteDevice(System.Int32)">
            <summary>
            Deletes a device by its ID.
            </summary>
            <param name="id">The ID of the device to delete.</param>
            <returns>An IActionResult indicating the result of the deletion.</returns>
            <remarks>
            Sample Request:
                DELETE /api/Devices/{id}
                {
                    "id": 1
                }
            </remarks>
            <response code="200">Returns an IActionResult indicating the result of the deletion.</response>
            <response code="400">If the device is null</response>
            <response code="401">Unauthorized access to execute the method.</response>
        </member>
        <member name="M:ISI.Controllers.HousesController.Get">
            <summary>
            This Method Gets all the Houses
            </summary>
            <returns>An List of Houses</returns>
            <remarks>
            Sample Request:
                GET /api/Houses
                {
                    // No request body for this endpoint.
                }
            </remarks>
            <response code="200">Returns an list of houses</response>
            <response code="400">If the list is null</response>
            <response code="401">No permission to execute the method</response>
        </member>
        <member name="M:ISI.Controllers.HousesController.Get(System.Int32)">
            <summary>
            Gets all houses associated with a user.
            </summary>
            <param name="idUser">User's ID.</param>
            <returns>List of houses.</returns>
            <remarks>
            Sample Request:
                GET /api/Houses/{idUser}
                {
                   "id": 1,
                   "name": "HouseTest",
                   "userId": 1
                }
            </remarks>
            <response code="200">Returns a list of houses associated with a specific user.</response>
            <response code="400">If the list of houses is null.</response>
            <response code="401">Unauthorized access to execute the method.</response>
        </member>
        <member name="M:ISI.Controllers.HousesController.Post(ISI.Models.House)">
            <summary>
            Creates a new house.
            </summary>
            <param name="house">The house object to be created.</param>
            <returns>ActionResult with appropriate HTTP status.</returns>
            <remarks>
            Sample Request:
                POST /api/Houses/{idUser}
                {
                   "id": 1,
                   "name": "HouseTest",
                   "userId": 1
                }
            </remarks>
            <response code="200">Returns a ActionResult with appropriate HTTP status.</response>
            <response code="400">If the input house is null or creation fails.</response>
            <response code="401">Unauthorized access to execute the method.</response>
        </member>
        <member name="M:ISI.Controllers.HousesController.Put(System.Int32,ISI.Models.House)">
            <summary>
            Updates a house.
            </summary>
            <param name="id">The ID of the house to update.</param>
            <param name="house">The updated house object.</param>
            <returns>ActionResult with appropriate HTTP status.</returns>
            <remarks>
            Sample Request:
                PUT /api/Houses/{id}
                {
                   "id": 1,
                   "name": "HouseTest",
                   "userId": 1
                }
            </remarks>
            <response code="200">Returns a list of houses.</response>
            <response code="400">If the input house is null or if IDs do not match.</response>
            <response code="401">Unauthorized access to execute the method.</response>
        </member>
        <member name="M:ISI.Controllers.HousesController.Delete(System.Int32)">
            <summary>
            Deletes a house.
            </summary>
            <param name="id">The ID of the house to delete.</param>
            <returns>ActionResult with appropriate HTTP status.</returns>
            <remarks>
            Sample Request:
                DELETE /api/Houses/{id}
                {
                   "id": 1
                }
            </remarks>
            <response code="200">Returns a list of houses.</response>
            <response code="400">If the list is null or deletion fails.</response>
            <response code="401">Unauthorized access to execute the method.</response>
        </member>
        <member name="M:ISI.Controllers.UsersController.Authenticate(ISI.Models.AuthRequest)">
            <summary>
            Authenticates the User.
            </summary>
            <param name="request">Authentication Request.</param>
            <returns>Token.</returns>
            <remarks>
            Sample Request:
                POST /api/Users/Login
                {
                   "email": "aluno@alunos.ipca.pt",
                   "password": "aluno1234"
                }
            </remarks>
            <response code="200">Returns a token.</response>
            <response code="400">If the credentials are invalid.</response>
        </member>
        <member name="M:ISI.Controllers.UsersController.PostUser(ISI.Models.RegistrationRequest)">
            <summary>
            Creates a new User.
            </summary>
            <param name="request">Registration Request.</param>
            <returns>Token.</returns>
            <remarks>
            Sample Request:
                POST /api/Users/Register
                {
                   "name": "aluno",
                   "email": "aluno@alunos.ipca.pt",
                   "username": "alunodelesi"
                   "password": "lesi1234"
                   "role": "User"
                }
            </remarks>
            <response code="200">Returns a token.</response>
            <response code="400">If the email already exists or if the user creation fails.</response>
        </member>
        <member name="T:ISI.Data.HouseRepositoryDB">
            <summary>
            This Class is for Connection to DB for House
            </summary>
        </member>
        <member name="M:ISI.Data.HouseRepositoryDB.#ctor(System.String)">
            <summary>
            Constructor for HouseRepositoryDB class.
            </summary>
            <param name="connectionString">The database connection string.</param>
        </member>
        <member name="M:ISI.Data.HouseRepositoryDB.GetAllHouses">
            <summary>
            This Method gets all Houses
            </summary>
            <returns>List of Houses</returns>
        </member>
        <member name="M:ISI.Data.HouseRepositoryDB.GetHousesByUser(System.Int32)">
            <summary>
            This Method gets all the Houses by User
            </summary>
            <param name="idUser">User's Id</param>
            <returns>List of Houses</returns>
        </member>
        <member name="M:ISI.Data.HouseRepositoryDB.CreateHouse(ISI.Models.House)">
            <summary>
            This Method creates a new House
            </summary>
            <param name="house">The House object to be created.</param>
            <returns>Boolean indicating success.</returns>
        </member>
        <member name="M:ISI.Data.HouseRepositoryDB.UpdateHouse(ISI.Models.House)">
            <summary>
            This Method Updates a House
            </summary>
            <param name="house">The House object to be updated.</param>
            <returns>Boolean indicating success.</returns>
        </member>
        <member name="M:ISI.Data.HouseRepositoryDB.DeleteHouse(System.Int32)">
            <summary>
            This Method deletes a House
            </summary>
            <param name="id">House's Id</param>
            <returns>Boolean indicating success.</returns>
        </member>
        <member name="T:ISI.Data.UserRepositoryDB">
            <summary>
            This Class is for Connection to DB for User
            </summary>
        </member>
        <member name="M:ISI.Data.UserRepositoryDB.FindByEmail(System.String)">
            <summary>
            This Method find User by Email
            </summary>
            <param name="email">User's Email</param>
            <returns>Object Type User</returns>
        </member>
        <member name="M:ISI.Data.UserRepositoryDB.CreateUser(ISI.Models.RegistrationRequest)">
            <summary>
            This Method creates User
            </summary>
            <param name="request">User Email and Password</param>
            <returns>Boolean</returns>
        </member>
        <member name="T:ISI.Enums.Role">
            <summary>
            Enumeration representing different roles in the system.
            </summary>
        </member>
        <member name="T:ISI.Models.AuthRequest">
            <summary>
            This Class is for Authentication Request
            </summary>
        </member>
        <member name="P:ISI.Models.AuthRequest.Email">
            <summary>
            User's Email
            </summary>
        </member>
        <member name="P:ISI.Models.AuthRequest.Password">
            <summary>
            User's Password
            </summary>
        </member>
        <member name="T:ISI.Models.AuthResponse">
            <summary>
            This Class is for Authentication Response
            </summary>
        </member>
        <member name="P:ISI.Models.AuthResponse.Token">
            <summary>
            User's Token
            </summary>
        </member>
        <member name="P:ISI.Models.AuthResponse.Expiration">
            <summary>
            Token Expiration
            </summary>
        </member>
        <member name="T:ISI.Models.Device">
            <summary>
            This class represents a Device
            </summary>
        </member>
        <member name="P:ISI.Models.Device.Id">
            <summary>
            Device's Id
            </summary>
        </member>
        <member name="P:ISI.Models.Device.Name">
            <summary>
            Device's Name
            </summary>
        </member>
        <member name="P:ISI.Models.Device.Value">
            <summary>
            Device's Value
            </summary>
        </member>
        <member name="P:ISI.Models.Device.HouseId">
            <summary>
            Room's Id
            </summary>
        </member>
        <member name="T:ISI.Models.House">
            <summary>
            This class represents a Home
            </summary>
        </member>
        <member name="P:ISI.Models.House.Id">
            <summary>
            House's Id
            </summary>
        </member>
        <member name="P:ISI.Models.House.Name">
            <summary>
            House's Name
            </summary>
        </member>
        <member name="P:ISI.Models.House.UserId">
            <summary>
            House's Id
            </summary>
        </member>
        <member name="T:ISI.Models.RegistrationRequest">
            <summary>
            This Class is for Resgistrarion Request
            </summary>
        </member>
        <member name="P:ISI.Models.RegistrationRequest.Name">
            <summary>
            User's Name
            </summary>
        </member>
        <member name="P:ISI.Models.RegistrationRequest.Email">
            <summary>
            User's Email
            </summary>
        </member>
        <member name="P:ISI.Models.RegistrationRequest.Username">
            <summary>
            User's Username
            </summary>
        </member>
        <member name="P:ISI.Models.RegistrationRequest.Password">
            <summary>
            User's Password
            </summary>
        </member>
        <member name="P:ISI.Models.RegistrationRequest.Role">
            <summary>
            User's Role
            </summary>
        </member>
        <member name="T:ISI.Models.User">
            <summary>
            This Class is for User
            </summary>
        </member>
        <member name="P:ISI.Models.User.Id">
            <summary>
            User's Id
            </summary>
        </member>
        <member name="P:ISI.Models.User.Name">
            <summary>
            User's Name
            </summary>
        </member>
        <member name="P:ISI.Models.User.Email">
            <summary>
            User's Email
            </summary>
        </member>
        <member name="P:ISI.Models.User.Username">
            <summary>
            User's Username
            </summary>
        </member>
        <member name="P:ISI.Models.User.Password">
            <summary>
            User's Password
            </summary>
        </member>
        <member name="P:ISI.Models.User.Role">
            <summary>
            User's Role
            </summary>
        </member>
        <member name="T:ISI.Services.JwtService">
            <summary>
            Service class for handling JWT (JSON Web Token) operations.
            </summary>
        </member>
        <member name="M:ISI.Services.JwtService.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor for JwtService class.
            </summary>
            <param name="configuration">The configuration to retrieve JWT-related settings.</param>
        </member>
        <member name="M:ISI.Services.JwtService.CreateToken(ISI.Models.User)">
            <summary>
            Creates a JWT token for the given user.
            </summary>
            <param name="user">The user for whom the token is created.</param>
            <returns>An AuthResponse containing the JWT token and its expiration.</returns>
        </member>
        <member name="M:ISI.Services.JwtService.CreateJwtToken(System.Security.Claims.Claim[],Microsoft.IdentityModel.Tokens.SigningCredentials,System.DateTime)">
            <summary>
            Creates a JWT token based on the provided claims, signing credentials, and expiration.
            </summary>
            <param name="claims">The claims to be included in the JWT.</param>
            <param name="credentials">The signing credentials for the JWT.</param>
            <param name="expiration">The expiration date and time of the JWT.</param>
            <returns>The created JWT token.</returns>
        </member>
        <member name="M:ISI.Services.JwtService.CreateClaims(ISI.Models.User)">
            <summary>
            Creates an array of claims for the provided user.
            </summary>
            <param name="user">The user for whom the claims are created.</param>
            <returns>An array of claims.</returns>
        </member>
        <member name="M:ISI.Services.JwtService.CreateSigningCredentials">
            <summary>
            Creates signing credentials based on the JWT key from configuration.
            </summary>
            <returns>The created signing credentials.</returns>
        </member>
    </members>
</doc>
